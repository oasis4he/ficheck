{"version":3,"sources":["app.js","budget-view.js","financial-goals.js","financial-ratios.js","financial-sections.js","grader.js","monthly-budget.js","monthly-tracking.js","revolvling-savings.js","life-insurance/expenses.js","life-insurance/funds-from-other-sources.js","life-insurance/insurance-needed.js","life-insurance/life-insurance.js","retirement-needs/annual-savings-required.js","retirement-needs/future-savings-investments.js","retirement-needs/retirement-goal.js","retirement-needs/savings-investments.js"],"names":[],"mappingsrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClvYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["//http://stackoverflow.com/questions/15762768/javascript-math-round-to-two-decimal-places\n  function roundTo(n, digits) {\n     if (digits === undefined) {\n       digits = 0;\n     }\n\n     var multiplicator = Math.pow(10, digits);\n     n = parseFloat((n * multiplicator).toFixed(11));\n     var test =(Math.round(n) / multiplicator);\n     return +(test.toFixed(2));\n   }\n\n   function roundedValue(number) {\n       var value = parseFloat(number);\n       return Number(Math.round(value+'e2')+'e-2').toFixed(2);\n   }\n\n(function($){\n   $('body').on('change', '[type=\"number\"]', function() {\n\n     $(this).val(roundedValue($(this).val()));\n\n   }).find('[type=\"number\"]').trigger('change');\n\n    $('body').on('focus', '[type=\"number\"]', function() {\n\n        $(this).select();\n\n    });\n})(jQuery);","(function($){\n  $(function(){\n\n    var planned = \"planned\";\n    var actual = \"actual\";\n    var difference = \"difference\";\n    var active = \"active\";\n\n    var activeClass = \"planned\";\n\n    //whether the page only should show actual\n    var revolvingSavings = $(\".budget-view\").hasClass(\"revolving-savings\") ? true : false;\n    var onlyActual = $(\".budget-view\").hasClass(\"onlyActual\") ? true : false;\n\n    if (onlyActual)\n    {\n      activeClass = \"actual\";\n    }\n\n    sumSections();\n\n    if(onlyActual){\n      sumStatementSections();\n    }\n\n    //loop through all sections and sum\n    function sumSections()\n    {\n      var sections = $(\".monthly-budget-type\");\n      $.each(sections, function(index, section){\n        $.each($(section).find(\".valueType .valueContainer\"), function(index, element){\n          sumTotal($(element));\n        })\n      });\n    }\n\n    function sumStatementSections() {\n      var sections = $(\".monthly-budget-type\");\n      $.each(sections, function(index, section){\n        $.each($(section).find(\".valueType\"), function(index, element){\n          sumStatmentTotal($(element));\n        })\n      });\n    }\n\n    //determine whether an element is planned actual or difference\n    function getType (element)\n    {\n      if($(element).hasClass(planned))\n      {\n        return planned;\n      }\n      else if($(element).hasClass(actual))\n      {\n        return actual;\n      }\n      else if($(element).hasClass(difference))\n      {\n        return difference;\n      }\n    }\n\n    // Toggle Planned actual and active inputs\n    $(\".budget-view\").on(\"click\", \".toggleBudgetInputs\", function(){\n\n      $(\".valueType, .valueTypeTotal, .toggleBudgetInputs\").removeClass(active);\n\n      $(this).removeClass(\"toggleBudgetInputs\");\n      activeClass = $(this).attr(\"class\");\n      $(this).addClass(\"toggleBudgetInputs\");\n\n      var type = getType(this);\n\n      $(\".valueType.\" + type + \", .valueTypeTotal.\" + type + \", .toggleBudgetInputs.\" + type).addClass(active);\n\n    });\n\n    //on input change of planned or actual update the value of difference\n    $(\".budget-view\").on(\"change\", \".valueInput\", function(){\n      //get the record id of the changed input's parent row\n      var row = $(this).parents(\".valueType\");\n      var recordId = $(row).attr(\"data-record-id\");\n      //get planned, actual and difference rows\n      var plannedRow = $(\".budget-view .valueType[data-record-id='\" + recordId + \"'] .\" + planned );\n      var actualRow = $(\".budget-view .valueType[data-record-id='\" + recordId + \"'] .\" + actual);\n      var differenceRow = $(\".budget-view .valueType[data-record-id='\" + recordId + \"'] .\" + difference );\n\n      //get planned and actual values\n      var plannedValue = plannedRow.find(\".valueInput\").val();\n      var actualValue = actualRow.find(\".valueInput\").val();\n\n      //update difference value based on planned and actual values\n      if ($(this).parents('.income').length){\n        var differenceValue = roundedValue(actualValue - plannedValue);\n      } else {\n        var differenceValue = roundedValue(plannedValue - actualValue);\n      }\n\n      differenceRow.find(\".valueInput\").val(differenceValue);\n\n      sumSections();\n\n      if(onlyActual){\n        sumStatementSections();\n      }\n    });\n\n    //function to sum total for a type\n    function sumTotal(element)\n    {\n      var type = getType (element);\n      if(type)\n      {\n        var monthlyBudgetType = element.closest(\".monthly-budget-type\");\n\n        var inputsToUpdate = monthlyBudgetType.find(\".valueType .\" + type);\n\n        var total = 0;\n\n        $.each(inputsToUpdate, function(index, input){\n          var inputTotal = Number($(input).find(\".valueInput\").val());\n          total += inputTotal;\n        });\n\n        var totalInput = monthlyBudgetType.find(\".\" + type + \" .totalInput\");\n\n        totalInput.val(total.toFixed(2));\n      }\n\n    }\n\n    //editable labels\n    $(\".budget-view\").on(\"click\", \".editLabel\", function(){\n      var inputId = $(this).attr(\"input-id\");\n      var recordId = $(this).attr(\"record-id\");\n      var editableContainer = $(this).closest(\".editable\");\n      var value = editableContainer.find(\"label[for='\" + inputId + \"']\").text().trim();\n\n      if(revolvingSavings) {\n        var month = $(this).closest(\".month\").attr(\"data-month-name\");\n      }\n\n      $(this).toggleClass(\"glyphicon-ok\");\n      $(this).toggleClass(\"glyphicon-pencil\");\n\n      if (editableContainer.find(\"input\").length) {\n        editableContainer.find(\".input-group\").toggleClass(\"deleteShow\");\n        editableContainer.find(\"label\").toggle();\n        editableContainer.find(\"label\").text(editableContainer.find(\"input\").val());\n      }\n      else\n      {\n        editableContainer.find(\".input-group\").toggleClass(\"deleteShow\");\n\n        if(revolvingSavings){\n          editableContainer.find(\".input-group\").prepend(\"<input type='text' name='names[\" + recordId + \"][name]' value='\" + value + \"' aria-label='\" + month + \" Item Description\" + value +\"' class='form-control'>\");\n        } else {\n          editableContainer.find(\".input-group\").prepend(\"<input type='text' name='names[\" + recordId + \"][name]' value='\" + value + \"' id='\" + recordId + \"_name' class='form-control'>\");\n        }\n\n        editableContainer.find(\"label\").hide();\n      }\n\n      editableContainer.find(\"input\").focus().select();\n\n    });\n\n    //delete field\n    $(\".budget-view\").on(\"click\", \".editable .deleteRow\", function(event){\n      var recordId = $(this).attr(\"data-record-id\");\n\n      //if it is an id that needs to be deleted from db (not new_id)\n      if (!isNaN(parseFloat(recordId)) && isFinite(recordId))\n      {\n        var hiddenInput = \"<input type='hidden' value='\" + recordId + \"' name=deletedIds[]>\";\n        $(\".budget-view\").append(hiddenInput);\n      }\n\n      //remove row from html\n      $(\".valueType[data-record-id='\" + recordId + \"']\").remove();\n    });\n\n    //Add new field\n    var newInputCount = 0;\n\n    $(\".budget-view\").on(\"change\", \".newItem\", function(event){\n      addNewRows(this);\n    });\n\n    $(\".budget-view\").on(\"click\", \".newItem\", function(event){\n      event.preventDefault();\n      addNewRows(this);\n    });\n\n    function getCategoryForSave(element)\n    {\n      return $(element).closest(\".ficheck-section-type\").attr(\"data-category\");\n    }\n\n    function getTypeForSave(element)\n    {\n      return $(element).closest(\".ficheck-section-type\").attr(\"data-type\");\n    }\n\n    function addNewRows(thisElement)\n    {\n      if (onlyActual)\n      {\n        var rowTypes = [\"actual\"];\n      }\n      else\n      {\n        var rowTypes = [\n          \"planned\",\n          \"actual\",\n          \"difference\"\n        ];\n      }\n\n      var calculator = $('[name=calculator').val();\n\n\n      var category = getCategoryForSave(thisElement);\n      var type = getTypeForSave(thisElement);\n\n      if (revolvingSavings)\n      {\n        var month = $(thisElement).closest(\".month\").attr(\"data-month\");\n        var monthName = $(thisElement).closest(\".month\").attr(\"data-month-name\");\n\n        var recordId =  \"new_\" + month + \"_\" + newInputCount;\n      }\n      else\n      {\n        var recordId =  \"new_\" + category + \"_\" + type + \"_\" + newInputCount;\n      }\n\n         var inputId = newInputCount;\n\n         var template = $(thisElement).closest(\".monthly-budget-type\").find(\".valueTypeTemplate\");\n         template.find(\"input\").attr(\"value\", $(thisElement).find(\"input\").val());\n         $(thisElement).find(\"input\").val(\"\");\n\n         var clone = $(thisElement).closest(\".monthly-budget-type\").find(\".valueTypeTemplate\").clone();\n\n         clone.attr(\"data-record-id\", recordId);\n         clone.find(\"label\").attr(\"for\", \"value_\" + inputId);\n         clone.find(\".deleteRow\").attr(\"data-record-id\", recordId);\n         clone.find(\".editLabel\").attr(\"record-id\", recordId);\n         clone.find(\".editLabel\").attr(\"input-id\", \"value_\" + inputId);\n         clone.find(\"input\").attr(\"id\", \"value_\" + inputId);\n\n         if(calculator == 'net-worth'){\n           clone.find(\"input\").attr(\"name\", \"names[\" + recordId + \"][actual_\" + inputId + \"][values]\");\n         } else if (!revolvingSavings)\n         {\n           clone.find(\".planned input\").attr(\"name\", \"names[\" + recordId + \"][planned_\" + inputId + \"][values]\");\n           clone.find(\".actual input\").attr(\"name\", \"names[\" + recordId + \"][actual_\" + inputId + \"][values]\");\n           clone.find(\".difference input\").attr(\"name\", \"names[\" + recordId + \"][difference_\" + inputId + \"][values]\");\n         }\n         else\n         {\n           clone.find(\"input\").attr(\"name\", \"names[\" + recordId + \"][value]\");\n           clone.find(\"input\").attr(\"aria-label\", monthName + \" Item Amount \");\n         }\n\n         //Set up  row to clone\n         clone.removeClass(\"valueTypeTemplate\");\n         $(thisElement).before(clone);\n\n      //add active to active class\n      $(\".valueType.\" + activeClass).addClass(active);\n      var newActiveRow = $(\".valueType[data-record-id='\" + recordId + \"']\");\n      newActiveRow.find(\".editLabel\").click();\n      newActiveRow.show();\n      newActiveRow.find(\".valueInput\").trigger(\"change\");\n\n      newInputCount++;\n    }\n\n    //update corresponding hidden inputs/labels as you update a label\n    $(\".budget-view\").on(\"change\", \".editable input\", function() {\n      var newValue = $(this).val();\n      var row = $(this).closest(\".valueType\");\n      var recordId = row.attr(\"data-record-id\");\n\n      //find all rows with this record id and change their values\n      var matchingRows = $(\".valueType[data-record-id='\" + recordId + \"']\");\n      matchingRows.find(\".editable label\").text(newValue);\n      matchingRows.find(\".editable input\").val(newValue);\n\n    })\n\n\n    //hide empty fields\n    $(\"body\").on(\"click\", \".hide-empty-fields\", function(){\n      event.preventDefault()\n\n      var rows = $(this).closest(\".monthly-budget-type\").find(\".valueType.row, .valueType.\" + activeClass);\n      $.each(rows, function(index, row) {\n        var rowVal = $(row).find(\"input[type='number']\").val();\n        if((rowVal == \"\" || rowVal == 0))\n        {\n          $(row).slideUp(\"fast\");\n        }\n      })\n    });\n\n    //show all fields\n    $(\".budget-view\").on(\"click\", \".show-all-fields\", function(){\n      event.preventDefault()\n\n      var rows = $(this).closest(\".monthly-budget-type\").find(\".valueType.row, .valueType.\" + activeClass).slideDown(\"fast\");\n\n    })\n\n  });\n\n  //If this page is readonly (income and expense)\n  var isReadOnly = $(\".budget-view\").hasClass(\"readonly\") ? true : false;\n\n  if (isReadOnly)\n  {\n    //hide editing controls and make inputs readonly\n    $(\".budget-view input\").attr(\"readonly\", \"readonly\");\n    $(\".budget-view .editLabel\").hide();\n  }\n\n  //if we should calculate totals do it\n  if ($(\".budget-sums\").length)\n  {\n    var revolvingSavings = $(\".budget-view\").hasClass(\"revolving-savings\") ? true : false;\n\n    if (revolvingSavings)\n    {\n      $(\".ficheck-section-type\").on(\"change\", \".valueInput\", function() {\n\n          var allInputs = $(\".ficheck-section-type .valueType.actual .valueInput\");\n          var yearlyTotal = 0;\n\n          $.each(allInputs, function(index, input) {\n            yearlyTotal += Number($(input).val());\n          });\n\n          $(\"#perYearTotal\").val(yearlyTotal.toFixed(2));\n          $(\"#perMonthTotal\").val((yearlyTotal/12).toFixed(2));\n      });\n\n      $(\".valueInput\").trigger(\"change\");\n\n    }\n    else\n    {\n      $(\".ficheck-section-type\").on(\"change\", \".valueInput\", function() {\n\n        //calculate totals\n        var actualIncomeInputs = $(\".ficheck-section-type[data-type='income'] .valueType.actual .valueInput\");\n        var actualExpenseInputs = $(\".ficheck-section-type[data-type='expense'] .valueType.actual .valueInput\");\n        var incomeTotal = 0;\n        var expenseTotal = 0;\n\n        $.each(actualIncomeInputs, function(index, input) {\n          incomeTotal += Number($(input).val());\n        });\n\n\n        $(\"#incomeTotal\").val(incomeTotal.toFixed(2));\n\n        $.each(actualExpenseInputs, function(index, input) {\n          expenseTotal += Number($(input).val());\n        });\n\n        $(\"#expenseTotal\").val(expenseTotal.toFixed(2));\n\n        $(\"#netTotal\").val((incomeTotal - expenseTotal).toFixed(2));\n\n      });\n\n      $(\".valueInput\").trigger(\"change\");\n\n    }\n\n  }\n\n  //function to sum total for a type\n  function sumStatmentTotal(element)\n  {\n    var type = 'actual';\n    if(type)\n    {\n      var monthlyBudgetType = element.closest(\".monthly-budget-type\");\n\n      var inputsToUpdate = monthlyBudgetType.find(\".valueType.\" + type);\n\n      var total = 0;\n\n      $.each(inputsToUpdate, function(index, input){\n        var inputTotal = Number($(input).find(\".valueInput\").val());\n        total += inputTotal;\n      });\n\n      var totalInput = monthlyBudgetType.find(\".\" + type + \" .totalInput\");\n\n      totalInput.val(total.toFixed(2));\n    }\n\n  }\n\n\n}(jQuery));\n","(function($){\n  $(function(){\n    // store the financialGoalsContainer\n    var financialGoalsContainer = $('.financial-goals');\n\n    // handler for the add tracking record control\n    financialGoalsContainer.on('click', 'a[href=#add]', function(e){\n      var goalWrapper = $(this).closest('.financial-goal-type');\n      var goals = goalWrapper.find('.body').last();\n      var template = goalWrapper.find('.template');\n      var newRecord = template.find('form').clone();\n\n      if(!goals.length) {\n        goals = $('<div class=\"body\"/>');\n        template.before(goals);\n      }\n\n      newRecord.addClass('new');\n\n      goals.append(newRecord);\n\n      newRecord.find('input:visible').first().trigger('focus');\n\n      $(this).remove();\n\n      return false;\n    });\n\n      $('.page-financial-goals  a[href=#collapse]').click(function(){\n          $('.financial-goals .financial-goal').slideUp();\n      });\n\n      $('.page-financial-goals  a[href=#expand]').click(function(){\n          $('.financial-goals .financial-goal').slideDown();\n      });\n\n      $('.page-financial-goals  h2').on('click', function(e){\n          $('form', $(this).closest('.ficheck-section-type')).slideToggle();\n\n          return false;\n      });\n\n  });\n  $('[name=date]').datepicker();\n}(jQuery));\n","(function($){\n  $(function(){\n    // store the financialGoalsContainer\n    var financialRatiosContainer = $('.financial-ratios');\n\n    $('.ficheck-section-type', financialRatiosContainer).on('change', 'input', function() {\n\n      var wrapper = $(this).closest('.ficheck-section-type');\n      var asset = wrapper.find('[name=asset]');\n      var liability = wrapper.find('[name=liability]');\n      var ratio = wrapper.find('[name=ratio]');\n      var result = 0;\n\n      if(asset.val() && liability.val()) {\n        if(wrapper.hasClass('financial-ratio-type-basic-liquidity')) {\n          if(liability.val() != 0) {\n            result = asset.val() / liability.val();\n          }\n        } else if(wrapper.hasClass('financial-ratio-type-asset-to-debt')) {\n          if(liability.val() != 0) {\n            result = asset.val() / liability.val();\n          }\n        } else if(wrapper.hasClass('financial-ratio-type-debt-payment-to-income')) {\n          if(liability.val() != 0) {\n            result = liability.val() / asset.val();\n          }\n        }\n      }\n\n      result = Math.round(result * 100) / 100;\n      ratio.val(result);\n\n      $(this).val(roundedValue($(this).val()));\n    });\n\n  });\n}(jQuery));\n","(function($){\n  $(function(){\n    var ficheckSections = $('.ficheck-sections');\n\n    ficheckSections.on('click', 'a[href=#expand]', function(e){\n      $('.body,[href=#add]', ficheckSections).slideDown();\n\n      return false;\n    });\n\n    ficheckSections.on('click', 'a[href=#collapse]', function(e){\n      $('.body,[href=#add]', ficheckSections).slideUp();\n\n      return false;\n    });\n\n    ficheckSections.on('click', 'h2', function(e){\n      $('.body,[href=#add]', $(this).closest('.ficheck-section-type')).slideToggle();\n\n      return false;\n    });\n\n    var helpControls = $('.help-controls', ficheckSections).on('click', 'a', function(){\n      var ratioElement = $(this).closest('.financial-section-type');\n      var row = $(this).closest('.row');\n      var description = row.find('.description')\n\n      $('.help-controls .hide', row).removeClass('hide');\n      $(this).addClass('hide');\n\n      if($(this).attr('href').search('show')>=0) {\n        description.show();\n      } else {\n        description.hide();\n      }\n\n      return false;\n    });\n  });\n}(jQuery));\n","(function($) {\n    $(function() {\n        var graderModeEnabled = $('.grader-mode-enabled');\n\n        var modalHtml = '<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">  <div class=\"modal-dialog\">    <div class=\"modal-content\">      <div class=\"modal-header\">        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>        <h4 class=\"modal-title\">Review Mode</h4>      </div>      <div class=\"modal-body\">        <p>You cannot save anything while viewing another user\\'s data.</p>      </div>      <div class=\"modal-footer\">        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>        <a type=\"button\" class=\"btn btn-primary\" href=\"/\">Exit Review Mode</a>      </div>    </div><!-- /.modal-content -->  </div><!-- /.modal-dialog --></div><!-- /.modal -->';\n\n        var modal = $(modalHtml).appendTo('body');\n\n        $('form', graderModeEnabled).on('submit', function(e) {\n            e.stopPropagation();\n            e.preventDefault();\n\n            $(modal).modal({backdrop: false});\n\n            return false;\n        });\n    });\n})(jQuery);\n","(function($){\n  $(function(){\n    $('.toggleBudgetInputs.actual').trigger('click');\n  });\n}(jQuery));\n","(function($){\n  // store the monthlyTrackingContainer\n  var monthlyTrackingContainer = $('.monthly-tracking')\n\n  // handler for the add tracking record control\n  // monthlyTrackingContainer.on('click', 'button.add', function(e){\n  //   var currentRecord = $(this).closest('form');\n  //   var newRecord = currentRecord.clone();\n  //\n  //   $(':input', newRecord).val('').removeAttr('disabled').closest('form').removeClass('changed');\n  //\n  //   currentRecord.after(newRecord);\n  //\n  //   newRecord.find('input:visible').first().trigger('focus');\n  //\n  //   return false;\n  // });\nmonthlyTrackingContainer.find('[name=date]').datepicker();\n  // disable in/out if other if filled in  (only one or the other should be active)\n  monthlyTrackingContainer.on('change', '[name=in],[name=out]', function(){\n    var form = $(this).closest('form');\n\n    var sibling = form.find('[name=in],[name=out]').not(this);\n\n    if($(this).val()) {\n      sibling.attr('disabled', true);\n    } else {\n      sibling.removeAttr('disabled');\n    }\n  }).find('[name=in],[name=out]').trigger('change');\n\n\n  // if an input changes and the form is valid, submit it via ajax\n  monthlyTrackingContainer.on('blur', '.edit', function(){\n    var form = $(this).closest('form');\n    var changed = false;\n    $('input', form).each(function(){\n        changed = this.value != this.defaultValue;\n\n        return !changed; // return if at least one control has changed value\n    });\n\n    if(changed) {\n      form.addClass('changed');\n    }\n\n    if(form.hasClass('changed') && form.find('[name=date]').val() && (form.find('[name=in]').val() || form.find('[name=out]').val()) && form.find('[name=category]').val()) {\n      saveEntry(form, false, false);\n    }\n  });\n\n  monthlyTrackingContainer.on('click', '[href=#add]', function(){\n\n    var form = $(this).closest('form');\n\n    saveEntry(form, true, true);\n\n  });\n\n  monthlyTrackingContainer.on('click', '[href=#newEntryModal]', function(){\n\n    $('.clicked').removeClass('clicked');\n    $(this).addClass('clicked');\n\n  });\n\n  monthlyTrackingContainer.on('click', '[href=#delete]', function(){\n    var form = $(this).closest('form');\n    var id = form.find('[name=id]').val();\n\n    $.ajax({\n      url: '/monthly-tracking/delete/' + id,\n      method: \"get\",\n      success: function() {\n\n        if(!form.siblings('form').length) {\n          form.closest('.monthly-tracking-section').remove();\n        }\n\n        form.next().find('[name=date]').focus();\n        form.remove();\n\n      },\n      error: function(e) {\n        $('#errorModal .modal-title').text('Error Deleting Entry');\n        $('#errorModal .modal-body p').text('There was an issue deleting this entry. Please try again.');\n        $('#errorModal').modal('show');\n      }\n    });\n  })\n\n  // track the active form (show controls via css)\n  monthlyTrackingContainer.on('focus', 'form input', function() {\n    monthlyTrackingContainer.find('form').removeClass('active');\n\n    $(this).closest('form').addClass('active');\n  });\n\n  // track the active form (show controls via css)\n  monthlyTrackingContainer.on('focus', 'form [name=category]', function() {\n    var form = $(this).closest('form');\n\n    if(form.find('[name=in]').val()) {\n      getIncomeCategories();\n    }\n\n    if(form.find('[name=out]').val()) {\n      getExpenseCategories();\n    }\n\n    $(this).closest('form').addClass('active');\n  });\n\n  monthlyTrackingContainer.on('click', '.dropdown-item', function() {\n    var collapse = $(this).attr('href');\n    $(collapse).collapse('show');\n    $('.panel-collapse:not('+collapse+')').collapse('hide');\n    $('#trackedMonthDropdown').html($(this).find('span:not(.hide)').text() + \"<i class='fa fa-chevron-down dropdown-caret' aria-hidden='true'></i>\");\n\n    $('html, body').animate({\n        scrollTop: $(collapse).offset().top\n    }, 1000);\n  });\n\n  $('.page-monthly-tracking a[href=#collapse]').click(function(){\n    $('.monthly-tracking .panel-collapse').collapse('hide');\n  });\n\n  $('.page-monthly-tracking a[href=#expand]').click(function(){\n    $('.monthly-tracking .panel-collapse').collapse('show');\n  });\n\n  monthlyTrackingContainer.on('change', '[name=in]', function() {\n\n    var value = roundTo($(this).val(), 2);\n    if((value.toString().split('.')[1] || []).length == 1){\n      value = value + \"0\";\n    }\n    $(this).val(value);\n\n    getIncomeCategories();\n  });\n\n  monthlyTrackingContainer.on('change', '[name=out]', function() {\n\n    var value = roundTo($(this).val(), 2);\n    if((value.toString().split('.')[1] || []).length == 1){\n      value = value + \"0\";\n    }\n    $(this).val(value);\n\n    getIncomeCategories();\n  });\n\n  $('#newEntryModal').on('shown.bs.modal', function () {\n    $('[name=date]').focus();\n})\n\n  function getExpenseCategories() {\n    $.ajax({\n      url: \"/categories/expense\",\n      method: \"get\",\n      dataType: 'json',\n      success: function(data) {\n        $( \"[name=category]\" ).autocomplete({\n          source: data\n        });\n      }\n    });\n  }\n\n  function getIncomeCategories() {\n    $.ajax({\n      url: \"/categories/income\",\n      method: \"get\",\n      dataType: 'json',\n      success: function(data) {\n        $( \"[name=category]\" ).autocomplete({\n          source: data\n        });\n      }\n    });\n  }\n\n//http://stackoverflow.com/questions/15762768/javascript-math-round-to-two-decimal-places\n  function roundTo(n, digits) {\n     if (digits === undefined) {\n       digits = 0;\n     }\n\n     var multiplicator = Math.pow(10, digits);\n     n = parseFloat((n * multiplicator).toFixed(11));\n     var test =(Math.round(n) / multiplicator);\n     return +(test.toFixed(2));\n   }\n\n\n   function saveEntry(form, addForm, closeModal) {\n     var data = form.serialize();\n\n     $.ajax({\n       url: form.action,\n       data: data,\n       method: \"post\",\n       dataType: \"json\",\n       success: function(data) {\n         form.removeClass('changed');\n\n         if(form.hasClass('new')) {\n           form.removeClass('new');\n         }\n\n         var month = form.find('[name=month_id]').val();\n         var monthName = '';\n\n\n         if(data.records.tracked_month.id != month) {\n           var oldPanel = $('#' + month);\n           var panel = $('#' + data.records.tracked_month.id)\n\n           var entry = `<form method=\"post\" class=\"edit active\">\n             <input class=\"form-control\" name=\"_token\" type=\"hidden\" value=\"`+ form.find('[name=_token]').val()+`\">\n\n             <input class=\"form-control\" name=\"id\" type=\"hidden\" value=\"`+ data.records.id +`\">\n             <input class=\"form-control\" name=\"month_id\" type=\"hidden\" value=\"`+ data.records.month_id +`\">\n\n             <div class=\"row\">\n               <div class=\"col-xs-4\"><input class=\"form-control\" name=\"date\" aria-labelledby=\"dateTrack\" value=\"`+ data.records.occurred_at+`\"></div>\n               <div class=\"col-xs-2\"><input class=\"form-control\" name=\"in\" type=\"number\" step=\"1\" aria-labelledby=\"inTrack\" value=\"`+ (parseFloat(data.records.value) > 0 ? parseFloat(data.records.value) : \"\") +`\"></div>\n               <div class=\"col-xs-2\"><input class=\"form-control\" name=\"out\" type=\"number\" step=\"1\" aria-labelledby=\"inTrack\" value=\"`+ (parseFloat(data.records.value) < 0 ? -1 * parseFloat(data.records.value) : \"\") +`\"></div>\n               <div class=\"col-xs-4\"><input class=\"form-control\" name=\"category\" type=\"text\" aria-labelledby=\"categoryTrack\" value=\"`+ data.records.category +`\"></div>\n               <div class=\"control\">\n                 <a href=\"#delete\" class=\"btn btn-danger delete\" class=\"submit\">Delete</a>\n               </div>\n             </div>\n           </form>`;\n\n           var newPanel = $(`<div class=\"panel panel-default monthly-tracking-section\" id=\"` + data.records.month_id + `\">\n           <span class=\"panel-month hide\">` + data.records.tracked_month.month + `</span>\n           <span class=\"panel-year hide\">` + data.records.tracked_month.year + `</span>\n           <div class=\"panel-heading\">\n             <h4 class=\"panel-title\">\n               <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#`+ data.months[data.records.tracked_month.month] +``+data.records.tracked_month.year+`\" aria-expanded=\"false\" class=\"collapsed\">\n                 `+ data.months[data.records.tracked_month.month] +` `+data.records.tracked_month.year+`</a>\n                 <!-- Trigger the modal with a button -->\n                 <a type=\"button\" class=\"pull-right\" data-toggle=\"modal\" data-target=\"#newEntryModal\" href=\"#newEntryModal\" aria-label=\"` + data.months[data.records.tracked_month.month] +` add new Entry\"><i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a>\n               </h4>\n             </div>\n             <div id=\"`+ data.months[data.records.tracked_month.month] +``+data.records.tracked_month.year+`\" class=\"panel-collapse collapse\" aria-expanded=\"false\">\n               <div class=\"panel-body\">\n                 <div class=\"row header\">\n                   <div class=\"col-xs-4\" id=\"dateTrack\">Date</div>\n                   <div class=\"col-xs-2\" id=\"inTrack\">In</div>\n                   <div class=\"col-xs-2\" id=\"outTrack\">Out</div>\n                   <div class=\"col-xs-4\" id=\"categoryTrack\">Category</div>\n                 </div>\n\n                 <div class=\"body\"></div>\n\n               </div>\n             </div>\n           </div>`);\n\n\n           if(panel.length){\n             var inserted = false;\n               if(data.records.tracked_month.id != month) {\n                 panel.find('form').each(function(index) {\n                   if(data.records.occurred_at >= $(this).find('[name=date]').val()) {\n                     $(this).before(entry);\n                     inserted = true;\n\n                     if(form.hasClass('edit')){\n                       form.next().find('[name=date]').focus();\n                       form.remove();\n                       if(!oldPanel.find('form').length) {\n                         oldPanel.remove();\n                       }\n                     } else {\n                       form[0].reset();\n                       form.find('input:disabled').removeAttr('disabled');\n                     }\n\n                     return false;\n                   }\n                 });\n\n                 if(!inserted){\n                   panel.find('.panel-collapse .panel-body .body').append(entry);\n                   if(form.hasClass('edit')){\n                     form.next().find('[name=date]').focus();\n                     form.remove();\n                     if(!oldPanel.find('form').length) {\n                       oldPanel.remove();\n                     }\n                   } else {\n                     form[0].reset();\n                     form.find('input:disabled').removeAttr('disabled');\n                   }\n                 }\n               }\n           } else {\n             var inserted = false;\n             var dropdownItem = false;\n              $('.panel-month').each(function(index) {\n\n                if(data.records.tracked_month.year > $(this).siblings('.panel-year').text() || (data.records.tracked_month.month > $(this).text() && data.records.tracked_month.year == $(this).siblings('.panel-year').text())) {\n                  newPanel.find('.panel-body .body').append(entry);\n                  $(this).closest('.panel').before(newPanel);\n\n                  if(form.hasClass('edit')){\n                    form.next().find('[name=date]').focus();\n                    form.remove();\n                    if(!oldPanel.find('form').length) {\n                      oldPanel.remove();\n                    }\n                  } else {\n                    form[0].reset();\n                    form.find('input:disabled').removeAttr('disabled');\n                  }\n\n                  inserted = true;\n\n                  return false;\n                }\n              });\n              if(!inserted) {\n                newPanel.find('.panel-body .body').append(entry);\n                $('.panel-group').append(newPanel);\n\n                if(form.hasClass('edit')){\n                  form.next().find('[name=date]').focus();\n                  form.remove();\n                  if(!oldPanel.find('form').length) {\n                    oldPanel.remove();\n                  }\n                } else {\n                  form[0].reset();\n                  form.find('input:disabled').removeAttr('disabled');\n                }\n              }\n\n              var link = $(`<a  class=\"dropdown-item\" data-parent=\"#accordion\" href=\"#`+ data.months[data.records.tracked_month.month] +``+data.records.tracked_month.year +`\">\n              <span class=\"dropdown-month hide\">`+data.records.tracked_month.month+`</span>\n              <span class=\"dropdown-year hide\">`+data.records.tracked_month.year+`</span>\n              <span>`+ data.months[data.records.tracked_month.month] +` `+ data.records.tracked_month.year+`</span>\n              </a>`);\n\n              $('.dropdown-item').each(function(index){\n                if(data.records.tracked_month.year > $(this).find('.dropdown-year').text()){\n                  $(this).before(link);\n                  dropdownItem = true;\n                  return false;\n                } else if(data.records.tracked_month.month > $(this).find('.dropdown-month').text() && data.records.tracked_month.year == $(this).find('.dropdown-year').text()) {\n                    $(this).before(link);\n                    dropdownItem = true;\n                    return false;\n                }\n\n              });\n\n              if(!dropdownItem) {\n                $('.dropdown-menu').append(link)\n              }\n          }\n         }\n\n         if(addForm) {\n           form.find('[name=date]').focus();\n\n         }\n\n         if(closeModal) {\n           $('#newEntryModal').modal('hide');\n           $('.clicked').focus();\n           $('.clicked').removeClass('clicked');\n         }\n\n         $('[name=date]').datepicker();\n       },\n       error: function(e) {\n         $('#errorModal .modal-title').text('Error Updating Entry');\n         $('#errorModal .modal-body p').text(e.message);\n         $('#errorModal').modal('show');\n       }\n     });\n\n   }\n\n\n}(jQuery));\n","\n(function($){\n    $(function(){\n        var revolvingSavingsContainer = $('.page-revolving-savings .ficheck-sections');\n        var totalsContainer = $('.budget-sums', revolvingSavingsContainer);\n        var wrapper = $('.ficheck-section-type', revolvingSavingsContainer);\n\n        $('.ficheck-section-type', revolvingSavingsContainer).on('change', 'input', function() {\n\n            var inputs = $(wrapper).find('input[type=\"number\"]');\n            var sum = 0;\n\n            inputs.each(function(a){\n                var value = parseFloat($(a).val());\n                sum += value;\n            });\n\n            var monthly = roundedValue(sum / 12);\n\n            $('#perYearTotal', totalsContainer).val(sum);\n            $('#perMonthTotal', totalsContainer).val(monthly);\n        });\n\n    });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var expenses = $('.life-insurance-type-expenses');\n\n    $(expenses).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-sections');\n\n        var funeralExpense = wrapper.find(\"[name=funeral_expenses]\").val();\n        var debt = wrapper.find(\"[name=debt]\").val();\n        var otherExpenses = wrapper.find(\"[name=other_expenses]\").val();\n\n        var enteredTotalIncomeForReplacement = $('[name=entered_total_income_replacement]').val();\n\n        var totalExpenses = wrapper.find('[name=total_expenses]');\n        var totalExpensesValue = roundedValue(Number(funeralExpense) + Number(debt) + Number(otherExpenses) + Number(enteredTotalIncomeForReplacement));\n        totalExpenses.val(totalExpensesValue);\n\n        var enteredTotalExpenses = $('[name=entered_total_expenses]');\n        enteredTotalExpenses.val(totalExpenses.val());\n        enteredTotalExpenses.trigger(\"change\");\n\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var fundsFromOtherSources = $('.life-insurance-type-other-sources');\n    $(fundsFromOtherSources).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var governmentBenefits = (wrapper.find('[name=government_benefits]').val());\n        var otherFunds = (wrapper.find('[name=other_funds]').val());\n\n        var totalFundsFromOtherSources = (wrapper.find('[name=total_funds_from_other_sources]'));\n        var totalFundsValue = roundedValue(Number(governmentBenefits) + Number(otherFunds))\n        totalFundsFromOtherSources.val(totalFundsValue);\n\n        var enteredTotalFundsFromOtherSources = $('[name=entered_total_funds_from_other_sources]');\n        enteredTotalFundsFromOtherSources.val(totalFundsFromOtherSources.val());\n        enteredTotalFundsFromOtherSources.trigger(\"change\");\n\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var insuranceNeeded = $('.life-insurance-type-insurance-needed');\n\n    $(insuranceNeeded).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var enteredTotalExpenses = wrapper.find('[name=entered_total_expenses]').val();\n        var enteredTotalFundsFromOtherSources = wrapper.find('[name=entered_total_funds_from_other_sources]').val();\n\n        var insuranceNeededValue = roundedValue(Number(enteredTotalExpenses) - Number(enteredTotalFundsFromOtherSources));\n\n        wrapper.find(\"[name=insurance_needed]\").val(insuranceNeededValue);\n    });\n  });\n}(jQuery));\n","(function($){\n  $(function(){\n    var lifeInsurace = $('.life-insurance-type-income-replacement');\n    var lifeInsuranceContainer = $('.life-insurance');\n\n    $(lifeInsurace).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var enteredAnnualIncome = (wrapper.find('[name=annual_income]').val() || 0) / 1;\n\n        var insuranceNeeds = $('[name=\"insurance_needs\"]', wrapper);\n\n        var insureanceNeedValue = roundedValue(enteredAnnualIncome * .75);\n\n        insuranceNeeds.val(insureanceNeedValue);\n\n        var totalIncomeForReplacement = wrapper.find('[name=total_income_replacement]');\n        var factorElement = $('[name=\"income_replacement_factor\"]', wrapper);\n\n        if(factorElement.val()) {\n            var totalIncomeReplacementValue = roundedValue(insureanceNeedValue * factorElement.val());\n            totalIncomeForReplacement.val(totalIncomeReplacementValue);\n\n            var enteredTotalIncomeForReplacement = $('[name=entered_total_income_replacement]');\n\n            enteredTotalIncomeForReplacement.val(totalIncomeForReplacement.val());\n            enteredTotalIncomeForReplacement.trigger(\"change\");\n        }\n    });\n\n    $(lifeInsurace).on('change', 'select', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var value = $(this).val();\n\n        var factor = $(':selected', this).data('factor') / 1;\n\n        var factorElement = $('[name=\"income_replacement_factor\"]', wrapper);\n\n        factorElement.val(factor).trigger('change');\n\n    });\n\n    lifeInsuranceContainer.on('change', 'input', function() {\n\n      $(this).val(roundedValue($(this).val()));\n\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var retirementGoals = $('.retirement-needs-type-annual-savings-required');\n    var retirementNeedsContainer = $('.retirement-needs');\n\n    $(retirementGoals).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var enteredretirementGoal = (wrapper.find('[name=entered_retirement_goal]').val() || 0) / 1;\n        var enteredFutureValueOfSavingsAndInvestments = (wrapper.find('[name=entered_future_value_of_savings_and_investments]').val() || 0) / 1;\n        var additionalSavingsNeededForRetirementElement = wrapper.find('[name=additional_savings_needed_for_retirement]');\n\n        var additionalSavingsNeededForRetirement = enteredretirementGoal - enteredFutureValueOfSavingsAndInvestments;\n        additionalSavingsNeededForRetirementElement.val(additionalSavingsNeededForRetirement);\n\n        var factor = $('[name=\"entered_retirement_age_factor\"]', wrapper).val();\n\n        if(factor) {\n            var goal = Math.round(additionalSavingsNeededForRetirement / factor * 100) / 100;\n\n            var additionAnnualSavingsRequired = $('[name=\"addition_annual_savings_required\"]', wrapper);\n            additionAnnualSavingsRequired.val(goal);\n        }\n    });\n\n    $(retirementGoals).on('change', 'select', function() {\n        var value = parseInt($(this).val(), 10);\n\n        var factor = $(':selected', this).data('factor') / 1;\n\n        var wrapper = $(this).closest('.row');\n        var factorElement = $('[name=\"entered_retirement_age_factor\"]', wrapper);\n\n        factorElement.val(factor).trigger('change');\n    });\n\n    retirementNeedsContainer.on('change', 'input', function() {\n\n      $(this).val(roundedValue($(this).val()));\n\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var futureSavingsInvestments = $('.retirement-needs-type-future-savings-investments');\n\n    $(futureSavingsInvestments).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-sections');\n        var currentValueSavingsAndInvestments = wrapper.find('[name=retirement_savings_and_investments]').val() / 1;\n\n        var factor = $('[name=\"retirement_years_factor\"]', wrapper).val();\n\n        if(currentValueSavingsAndInvestments && factor) {\n            var goal = Math.round(currentValueSavingsAndInvestments * factor * 100) / 100;\n\n            var futureValueSavingsAndInvestmentsElement = $('[name=\"future_value_of_savings_and_investments\"]', wrapper);\n            var oldGoal = parseFloat(futureValueSavingsAndInvestmentsElement.val());\n\n            if (oldGoal != goal) {\n                futureValueSavingsAndInvestmentsElement.val(goal);\n\n                var annualSavingsFutureSavings = $('[name=\"entered_future_value_of_savings_and_investments\"]');\n                annualSavingsFutureSavings.val(goal).trigger('change');\n            }\n        }\n    });\n\n    $(futureSavingsInvestments).on('change', 'select', function() {\n        var factor = $(':selected', this).data('factor');\n\n        var wrapper = $(this).closest('.row');\n        var factorElement = $('[name=\"retirement_years_factor\"]', wrapper);\n\n        factorElement.val(factor).trigger('change');\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var retirementGoals = $('.retirement-needs-type-retirement-goal');\n\n    $(retirementGoals).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var annualIncome = (wrapper.find('[name=annual_income]').val() || 0) / 1;\n        var annualSsBenefit = (wrapper.find('[name=annual_ss_benefit]').val() || 0) / 1;\n        var annualEmployerBenefit = (wrapper.find('[name=annual_employer_benefit]').val() || 0) / 1;\n        var additionalAnnualIncomeRequiredElement = wrapper.find('[name=additional_annual_income_required]');\n\n        var additionalAnnualIncomeRequired = Math.round((annualIncome - annualSsBenefit - annualEmployerBenefit) * 100) / 100;\n        additionalAnnualIncomeRequiredElement.val(additionalAnnualIncomeRequired);\n\n        var factor = $('[name=\"retirement_age_factor\"]', wrapper).val();\n\n        if(factor) {\n            var goal = Math.round(additionalAnnualIncomeRequired * factor * 100) / 100;\n\n            var retirementGoal = $('[name=\"retirement_goal\"]', wrapper);\n            var oldGoal = parseFloat(retirementGoal.val());\n            if (oldGoal != goal) {\n                retirementGoal.val(goal);\n                var annualSavingsRetirementGoal = $('[name=\"entered_retirement_goal\"]');\n                annualSavingsRetirementGoal.val(goal).trigger('change');\n\n            }\n        }\n\n    });\n\n    $(retirementGoals).on('change', 'select', function() {\n        var value = parseInt($(this).val(), 10);\n\n        var factor = $(':selected', this).data('factor') / 1;\n\n        var wrapper = $(this).closest('.row');\n        var factorElement = $('[name=\"retirement_age_factor\"]', wrapper);\n\n        factorElement.val(factor).trigger('change');\n    });\n\n  });\n}(jQuery));\n","\n(function($){\n  $(function(){\n    var savingsInvestments = $('.retirement-needs-type-savings-investements');\n\n    $(savingsInvestments).on('change', 'input', function() {\n        var wrapper = $(this).closest('.ficheck-section-type');\n\n        var currentValueEmployeeRetirementSavings = (wrapper.find('[name=employee_retirement_savings]').val() || 0) / 1;\n        var currentValuePersonalRetirementSavings = (wrapper.find('[name=personal_retirement_savings]').val() || 0) / 1;\n        var currentValueInvestments = (wrapper.find('[name=investements_value]').val() || 0) / 1;\n        var currentValueSavingsAndInvestmentsElement = wrapper.find('[name=retirement_savings_and_investments]');\n\n        var currentValueSavingsAndInvestments = Math.round((currentValueEmployeeRetirementSavings + currentValuePersonalRetirementSavings + currentValueInvestments) * 100) / 100;\n        currentValueSavingsAndInvestmentsElement.val(currentValueSavingsAndInvestments);\n\n        wrapper.next('.ficheck-section-type').find('[name=\"retirement_years_factor\"]').trigger('change');\n    });\n  });\n}(jQuery));\n"]}